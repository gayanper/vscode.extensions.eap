name: Build and Deploy

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      module:
        description: Choose a module
        required: true
        type: choice
        options:
          - "vscode-java"
          - "vscode-java-debug"
          - "vscode-java-test"
          - "vscode-gradle"
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Setup Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.4

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: v16.16.0

      - name: Setup Cloudsmith CLI
        run: |
            python -m pip install --upgrade pip
            pip install --upgrade cloudsmith-cli

      - name: Setup VSCode Packager
        run: npm install -g vsce

      - name: Configure Git
        run: |
          git config --global user.email "workflows@egithub.com"
          git config --global user.name "workflows@egithub.com"

      - name: Checkout modules
        run: ./scripts/checkout-modules.sh

      - name: Merge PRs
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: ./scripts/merge-prs.sh

      - name: Build vscode-java
        run: ./scripts/build-vscode-java.sh
        if: ${{ inputs.module == 'vscode-java' }}
      
      - name: Deploy vscode-java
        env: 
          CLOUDSMITH_API_KEY: ${{ secrets.PKG_API_KEY }}
        if: ${{ github.ref == 'refs/heads/main' && inputs.module == 'vscode-java' }}
        run: ./scripts/upload-to-cloudsmith.sh $(ls ./extensions/vscode-java/*.vsix)

      - name: Build vscode-java-debug
        run: ./scripts/build-vscode-java-debug.sh
        if: ${{ inputs.module == 'vscode-java-debug' }}
      
      - name: Deploy vscode-java-debug
        env: 
          CLOUDSMITH_API_KEY: ${{ secrets.PKG_API_KEY }}
        if: ${{ github.ref == 'refs/heads/main' && inputs.module == 'vscode-java-debug' }}
        run: ./scripts/upload-to-cloudsmith.sh $(ls ./extensions/vscode-java-debug/*.vsix)

      - name: Build vscode-java-test
        run: ./scripts/build-vscode-java-test.sh
        if: ${{ inputs.module == 'vscode-java-test' }}
      
      - name: Deploy vscode-java-test
        env: 
          CLOUDSMITH_API_KEY: ${{ secrets.PKG_API_KEY }}
        if: ${{ github.ref == 'refs/heads/main' && inputs.module == 'vscode-java-test' }}
        run: ./scripts/upload-to-cloudsmith.sh $(ls ./extensions/vscode-java-test/*.vsix)

      - name: Build vscode-gradle
        run: ./scripts/build-vscode-gradle.sh
        if: ${{ inputs.module == 'vscode-gradle' }}
      
      - name: Deploy vscode-gradle
        env: 
          CLOUDSMITH_API_KEY: ${{ secrets.PKG_API_KEY }}
        if: ${{ github.ref == 'refs/heads/main' && inputs.module == 'vscode-gradle' }}
        run: ./scripts/upload-to-cloudsmith.sh $(ls ./extensions/vscode-gradle/extension/*.vsix)
